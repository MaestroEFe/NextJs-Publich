"use strict";(()=>{var e={};e.id=9118,e.ids=[9118],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84492:e=>{e.exports=require("node:stream")},21592:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>w,staticGenerationAsyncStorage:()=>g});var t={};r.r(t),r.d(t,{POST:()=>p});var a=r(13686),o=r(90149),i=r(74787),n=r(87107),l=r(85),u=r(84770),d=r.n(u);async function p(e){await (0,l.uD)(process.env.MONGODB_URI);try{let{email:s}=await e.json();if(!s)return n.NextResponse.json({message:"Email is required."},{status:400});let r=await l.n5.findOne({email:s});if(r){let e=d().randomBytes(32).toString("hex");r.passwordResetToken=d().createHash("sha256").update(e).digest("hex"),r.passwordResetTokenExpires=new Date(Date.now()+36e5),await r.save();let s=`${process.env.NEXTAUTH_URL}/reset-password?token=${e}`,t=`
        <h1>You requested a password reset</h1>
        <p>Click the link below to reset your password:</p>
        <a href="${s}">Reset Password</a>
        <p>This link is valid for 1 hour. If you did not request this, please ignore this email.</p>
      `;await (0,l.Cz)({to:r.email,subject:"Password Reset Request",html:t})}return n.NextResponse.json({message:"If an account with this email exists, a password reset link has been sent."},{status:200})}catch(e){return console.error("Forgot password error:",e),n.NextResponse.json({message:"An error occurred. Please try again later."},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/forgot-password/route",pathname:"/api/auth/forgot-password",filename:"route",bundlePath:"app/api/auth/forgot-password/route"},resolvedPagePath:"/home/efe/Documents/NextJs/NextJs-Public/AuthenticationSystem/apps/web/app/api/auth/forgot-password/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:w}=c,h="/api/auth/forgot-password/route";function f(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:g})}},85:(e,s,r)=>{r.d(s,{Jp:()=>y,n5:()=>d,uD:()=>o,no:()=>p,yN:()=>c,GJ:()=>m,Cz:()=>h,gV:()=>x});var t=r(11185),a=r.n(t);let o=async e=>{if(a().connections[0].readyState)return!0;try{return await a().connect(e),console.log("MongoDB connected successfully."),!0}catch(e){return console.error("Error connecting to MongoDB:",e),!1}};var i=r(4612),n=r(61343),l=r.n(n);let u=new t.Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Please provide a password"],minlength:6,select:!1},group:{type:String,enum:["user","admin"],default:"user"},isVerified:{type:Boolean,default:!1},verificationToken:{type:String,select:!1},verificationTokenExpires:{type:Date,select:!1},passwordResetToken:{type:String,select:!1},passwordResetTokenExpires:{type:Date,select:!1}},{timestamps:!0});u.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();let s=await l().genSalt(10);this.password=await l().hash(this.password,s),e()}),u.methods.comparePassword=async function(e){return!!this.password&&await l().compare(e,this.password)};let d=a().models.User||a().model("User",u),p=(e,s)=>({providers:[(0,i.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(s){if(await o(e),!s?.email||!s?.password)return null;let r=await d.findOne({email:s.email}).select("+password");return r&&await r.comparePassword(s.password)?{id:r._id.toString(),name:r.name,email:r.email,group:r.group}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:s})=>(s&&(e.id=s.id,e.group=s.group),e),session:async({session:e,token:s})=>(e.user&&(e.user.id=s.id,e.user.group=s.group),e)},pages:{signIn:"/login"},secret:s}),c=e=>!!e&&["admin","staff"].includes(e.toLowerCase()),m=e=>e?.user?.group==="admin",g=new(r(88444)).R(process.env.RESEND_API_KEY),w=process.env.EMAIL_FROM,h=async e=>{if(!process.env.RESEND_API_KEY||!w){let e="Email service is not configured. Please set RESEND_API_KEY and EMAIL_FROM environment variables.";return console.error(e),{success:!1,error:Error(e)}}try{let s=e.from||w,{data:r,error:t}=await g.emails.send({from:s,to:e.to,subject:e.subject,html:e.html});if(t)return console.error("Error sending email:",t),{success:!1,error:t};if(!r){let e=Error("Email sending failed without an explicit error.");return console.error(e),{success:!1,error:e}}return console.log("Email sent successfully:",r.id),{success:!0,data:r}}catch(e){return console.error("An unexpected error occurred in sendEmail:",e),{success:!1,error:e}}},f=new t.Schema({email:{type:String,required:!0},token:{type:String,required:!0,unique:!0},expiresAt:{type:Date,required:!0,expires:"1h"}}),y=a().models.PasswordResetToken||a().model("PasswordResetToken",f);var v=r(2608);v.z.object({name:v.z.string().min(3,{message:"Name must be at least 3 characters long"}),email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})}),v.z.object({email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(1,{message:"Password is required"})});let x=v.z.object({name:v.z.string().min(3).optional(),email:v.z.string().email().optional()});v.z.object({password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})})}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[8565,4355,7668],()=>r(21592));module.exports=t})();