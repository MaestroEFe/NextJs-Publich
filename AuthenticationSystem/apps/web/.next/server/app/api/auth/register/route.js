"use strict";(()=>{var e={};e.id=3002,e.ids=[3002],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84492:e=>{e.exports=require("node:stream")},78324:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>w,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var t={};s.r(t),s.d(t,{POST:()=>p});var a=s(13686),i=s(90149),o=s(74787),n=s(87107),l=s(85),u=s(84770),c=s.n(u);async function p(e){await (0,l.uD)(process.env.MONGODB_URI);try{let{name:r,email:s,password:t}=await e.json();if(!r||!s||!t)return n.NextResponse.json({message:"Please fill in all fields."},{status:400});if(await l.n5.findOne({email:s}))return n.NextResponse.json({message:"User with this email already exists."},{status:409});let a=new l.n5({name:r,email:s,password:t}),i=c().randomBytes(32).toString("hex");a.verificationToken=c().createHash("sha256").update(i).digest("hex"),a.verificationTokenExpires=new Date(Date.now()+36e5),await a.save();let o=`${process.env.NEXTAUTH_URL}/auth/verify-email?token=${i}`,u=`
      <h1>Welcome to the App!</h1>
      <p>Thanks for signing up. Please verify your email by clicking the link below:</p>
      <a href="${o}">Verify Email</a>
      <p>This link will expire in 1 hour.</p>
    `;return await (0,l.Cz)({to:a.email,subject:"Verify Your Email Address",html:u}),n.NextResponse.json({message:"Registration successful! Please check your email to verify your account."},{status:201})}catch(e){return console.error("Registration error:",e),n.NextResponse.json({message:"An error occurred during registration."},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"/home/efe/Documents/NextJs/NextJs-Public/AuthenticationSystem/apps/web/app/api/auth/register/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:h}=d,w="/api/auth/register/route";function y(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},85:(e,r,s)=>{s.d(r,{Jp:()=>f,n5:()=>c,uD:()=>i,no:()=>p,yN:()=>d,GJ:()=>m,Cz:()=>w,gV:()=>x});var t=s(11185),a=s.n(t);let i=async e=>{if(a().connections[0].readyState)return!0;try{return await a().connect(e),console.log("MongoDB connected successfully."),!0}catch(e){return console.error("Error connecting to MongoDB:",e),!1}};var o=s(4612),n=s(61343),l=s.n(n);let u=new t.Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Please provide a password"],minlength:6,select:!1},group:{type:String,enum:["user","admin"],default:"user"},isVerified:{type:Boolean,default:!1},verificationToken:{type:String,select:!1},verificationTokenExpires:{type:Date,select:!1},passwordResetToken:{type:String,select:!1},passwordResetTokenExpires:{type:Date,select:!1}},{timestamps:!0});u.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();let r=await l().genSalt(10);this.password=await l().hash(this.password,r),e()}),u.methods.comparePassword=async function(e){return!!this.password&&await l().compare(e,this.password)};let c=a().models.User||a().model("User",u),p=(e,r)=>({providers:[(0,o.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(r){if(await i(e),!r?.email||!r?.password)return null;let s=await c.findOne({email:r.email}).select("+password");return s&&await s.comparePassword(r.password)?{id:s._id.toString(),name:s.name,email:s.email,group:s.group}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.group=r.group),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id,e.user.group=r.group),e)},pages:{signIn:"/login"},secret:r}),d=e=>!!e&&["admin","staff"].includes(e.toLowerCase()),m=e=>e?.user?.group==="admin",g=new(s(88444)).R(process.env.RESEND_API_KEY),h=process.env.EMAIL_FROM,w=async e=>{if(!process.env.RESEND_API_KEY||!h){let e="Email service is not configured. Please set RESEND_API_KEY and EMAIL_FROM environment variables.";return console.error(e),{success:!1,error:Error(e)}}try{let r=e.from||h,{data:s,error:t}=await g.emails.send({from:r,to:e.to,subject:e.subject,html:e.html});if(t)return console.error("Error sending email:",t),{success:!1,error:t};if(!s){let e=Error("Email sending failed without an explicit error.");return console.error(e),{success:!1,error:e}}return console.log("Email sent successfully:",s.id),{success:!0,data:s}}catch(e){return console.error("An unexpected error occurred in sendEmail:",e),{success:!1,error:e}}},y=new t.Schema({email:{type:String,required:!0},token:{type:String,required:!0,unique:!0},expiresAt:{type:Date,required:!0,expires:"1h"}}),f=a().models.PasswordResetToken||a().model("PasswordResetToken",y);var v=s(2608);v.z.object({name:v.z.string().min(3,{message:"Name must be at least 3 characters long"}),email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})}),v.z.object({email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(1,{message:"Password is required"})});let x=v.z.object({name:v.z.string().min(3).optional(),email:v.z.string().email().optional()});v.z.object({password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})})}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[8565,4355,7668],()=>s(78324));module.exports=t})();