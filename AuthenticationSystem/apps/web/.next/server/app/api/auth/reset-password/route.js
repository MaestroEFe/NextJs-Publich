"use strict";(()=>{var e={};e.id=9436,e.ids=[9436],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84492:e=>{e.exports=require("node:stream")},95360:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>w});var t={};r.r(t),r.d(t,{POST:()=>l});var a=r(13686),o=r(90149),n=r(74787),i=r(87107),d=r(85),u=r(84770),p=r.n(u);async function l(e){await (0,d.uD)(process.env.MONGODB_URI);try{let{token:s,password:r}=await e.json();if(!s||!r)return i.NextResponse.json({message:"Token and password are required."},{status:400});let t=p().createHash("sha256").update(s).digest("hex"),a=await d.n5.findOne({passwordResetToken:t,passwordResetTokenExpires:{$gt:Date.now()}});if(!a)return i.NextResponse.json({message:"Invalid or expired password reset token."},{status:400});return a.password=r,a.passwordResetToken=void 0,a.passwordResetTokenExpires=void 0,await a.save(),i.NextResponse.json({message:"Password has been reset successfully."},{status:200})}catch(e){return console.error("Reset password error:",e),i.NextResponse.json({message:"An error occurred while resetting the password."},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/auth/reset-password/route",pathname:"/api/auth/reset-password",filename:"route",bundlePath:"app/api/auth/reset-password/route"},resolvedPagePath:"/home/efe/Documents/NextJs/NextJs-Public/AuthenticationSystem/apps/web/app/api/auth/reset-password/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:w,serverHooks:g}=c,h="/api/auth/reset-password/route";function y(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:w})}},85:(e,s,r)=>{r.d(s,{Jp:()=>f,n5:()=>p,uD:()=>o,no:()=>l,yN:()=>c,GJ:()=>m,Cz:()=>h,gV:()=>x});var t=r(11185),a=r.n(t);let o=async e=>{if(a().connections[0].readyState)return!0;try{return await a().connect(e),console.log("MongoDB connected successfully."),!0}catch(e){return console.error("Error connecting to MongoDB:",e),!1}};var n=r(4612),i=r(61343),d=r.n(i);let u=new t.Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Please provide a password"],minlength:6,select:!1},group:{type:String,enum:["user","admin"],default:"user"},isVerified:{type:Boolean,default:!1},verificationToken:{type:String,select:!1},verificationTokenExpires:{type:Date,select:!1},passwordResetToken:{type:String,select:!1},passwordResetTokenExpires:{type:Date,select:!1}},{timestamps:!0});u.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();let s=await d().genSalt(10);this.password=await d().hash(this.password,s),e()}),u.methods.comparePassword=async function(e){return!!this.password&&await d().compare(e,this.password)};let p=a().models.User||a().model("User",u),l=(e,s)=>({providers:[(0,n.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(s){if(await o(e),!s?.email||!s?.password)return null;let r=await p.findOne({email:s.email}).select("+password");return r&&await r.comparePassword(s.password)?{id:r._id.toString(),name:r.name,email:r.email,group:r.group}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:s})=>(s&&(e.id=s.id,e.group=s.group),e),session:async({session:e,token:s})=>(e.user&&(e.user.id=s.id,e.user.group=s.group),e)},pages:{signIn:"/login"},secret:s}),c=e=>!!e&&["admin","staff"].includes(e.toLowerCase()),m=e=>e?.user?.group==="admin",w=new(r(88444)).R(process.env.RESEND_API_KEY),g=process.env.EMAIL_FROM,h=async e=>{if(!process.env.RESEND_API_KEY||!g){let e="Email service is not configured. Please set RESEND_API_KEY and EMAIL_FROM environment variables.";return console.error(e),{success:!1,error:Error(e)}}try{let s=e.from||g,{data:r,error:t}=await w.emails.send({from:s,to:e.to,subject:e.subject,html:e.html});if(t)return console.error("Error sending email:",t),{success:!1,error:t};if(!r){let e=Error("Email sending failed without an explicit error.");return console.error(e),{success:!1,error:e}}return console.log("Email sent successfully:",r.id),{success:!0,data:r}}catch(e){return console.error("An unexpected error occurred in sendEmail:",e),{success:!1,error:e}}},y=new t.Schema({email:{type:String,required:!0},token:{type:String,required:!0,unique:!0},expiresAt:{type:Date,required:!0,expires:"1h"}}),f=a().models.PasswordResetToken||a().model("PasswordResetToken",y);var v=r(2608);v.z.object({name:v.z.string().min(3,{message:"Name must be at least 3 characters long"}),email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})}),v.z.object({email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(1,{message:"Password is required"})});let x=v.z.object({name:v.z.string().min(3).optional(),email:v.z.string().email().optional()});v.z.object({password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})})}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[8565,4355,7668],()=>r(95360));module.exports=t})();