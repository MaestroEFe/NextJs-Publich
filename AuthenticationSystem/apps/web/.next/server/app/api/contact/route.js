"use strict";(()=>{var e={};e.id=386,e.ids=[386],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84492:e=>{e.exports=require("node:stream")},91611:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>w,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>p});var t={};s.r(t),s.d(t,{POST:()=>d});var a=s(13686),i=s(90149),n=s(74787),o=s(87107),l=s(85),c=s(50099);async function d(e){await (0,l.uD)(process.env.MONGODB_URI);try{let r=await e.json(),{name:s,email:t,message:a}=r;if(!s||!t||!a)return o.NextResponse.json({message:"Missing required fields."},{status:400});let i=new c.Z(r);return await i.save(),o.NextResponse.json({message:"Contact message submitted successfully."},{status:201})}catch(e){if(console.error("Error saving contact message:",e),e instanceof Error&&"ValidationError"===e.name)return o.NextResponse.json({message:"Invalid data provided.",details:e.message},{status:400});return o.NextResponse.json({message:"An unexpected error occurred."},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/contact/route",pathname:"/api/contact",filename:"route",bundlePath:"app/api/contact/route"},resolvedPagePath:"/home/efe/Documents/NextJs/NextJs-Public/AuthenticationSystem/apps/web/app/api/contact/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:p,serverHooks:g}=u,w="/api/contact/route";function y(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:p})}},85:(e,r,s)=>{s.d(r,{Jp:()=>f,n5:()=>d,uD:()=>i,no:()=>u,yN:()=>m,GJ:()=>p,Cz:()=>y,gV:()=>x});var t=s(11185),a=s.n(t);let i=async e=>{if(a().connections[0].readyState)return!0;try{return await a().connect(e),console.log("MongoDB connected successfully."),!0}catch(e){return console.error("Error connecting to MongoDB:",e),!1}};var n=s(4612),o=s(61343),l=s.n(o);let c=new t.Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Please provide a password"],minlength:6,select:!1},group:{type:String,enum:["user","admin"],default:"user"},isVerified:{type:Boolean,default:!1},verificationToken:{type:String,select:!1},verificationTokenExpires:{type:Date,select:!1},passwordResetToken:{type:String,select:!1},passwordResetTokenExpires:{type:Date,select:!1}},{timestamps:!0});c.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();let r=await l().genSalt(10);this.password=await l().hash(this.password,r),e()}),c.methods.comparePassword=async function(e){return!!this.password&&await l().compare(e,this.password)};let d=a().models.User||a().model("User",c),u=(e,r)=>({providers:[(0,n.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(r){if(await i(e),!r?.email||!r?.password)return null;let s=await d.findOne({email:r.email}).select("+password");return s&&await s.comparePassword(r.password)?{id:s._id.toString(),name:s.name,email:s.email,group:s.group}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.group=r.group),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id,e.user.group=r.group),e)},pages:{signIn:"/login"},secret:r}),m=e=>!!e&&["admin","staff"].includes(e.toLowerCase()),p=e=>e?.user?.group==="admin",g=new(s(88444)).R(process.env.RESEND_API_KEY),w=process.env.EMAIL_FROM,y=async e=>{if(!process.env.RESEND_API_KEY||!w){let e="Email service is not configured. Please set RESEND_API_KEY and EMAIL_FROM environment variables.";return console.error(e),{success:!1,error:Error(e)}}try{let r=e.from||w,{data:s,error:t}=await g.emails.send({from:r,to:e.to,subject:e.subject,html:e.html});if(t)return console.error("Error sending email:",t),{success:!1,error:t};if(!s){let e=Error("Email sending failed without an explicit error.");return console.error(e),{success:!1,error:e}}return console.log("Email sent successfully:",s.id),{success:!0,data:s}}catch(e){return console.error("An unexpected error occurred in sendEmail:",e),{success:!1,error:e}}},h=new t.Schema({email:{type:String,required:!0},token:{type:String,required:!0,unique:!0},expiresAt:{type:Date,required:!0,expires:"1h"}}),f=a().models.PasswordResetToken||a().model("PasswordResetToken",h);var v=s(2608);v.z.object({name:v.z.string().min(3,{message:"Name must be at least 3 characters long"}),email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})}),v.z.object({email:v.z.string().email({message:"Invalid email address"}),password:v.z.string().min(1,{message:"Password is required"})});let x=v.z.object({name:v.z.string().min(3).optional(),email:v.z.string().email().optional()});v.z.object({password:v.z.string().min(6,{message:"Password must be at least 6 characters long"})})},50099:(e,r,s)=>{s.d(r,{Z:()=>n});var t=s(11185),a=s.n(t);let i=new t.Schema({name:{type:String,required:[!0,"Name is required."],trim:!0},email:{type:String,required:[!0,"Email is required."],trim:!0,lowercase:!0,match:[/.+\@.+\..+/,"Please fill a valid email address"]},interestArea:{type:String,trim:!0},message:{type:String,required:[!0,"Message is required."],trim:!0},createdAt:{type:Date,default:Date.now}}),n=a().models.ContactMessage||a().model("ContactMessage",i)}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[8565,4355,7668],()=>s(91611));module.exports=t})();