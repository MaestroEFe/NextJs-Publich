"use strict";(()=>{var e={};e.id=1986,e.ids=[1986],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},84492:e=>{e.exports=require("node:stream")},75901:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>y,patchFetch:()=>w,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var t={};s.r(t),s.d(t,{POST:()=>d});var i=s(13686),a=s(90149),n=s(74787),o=s(87107),l=s(85),u=s(4514);async function d(e){await (0,l.uD)(process.env.MONGODB_URI);try{let r=await e.json(),{fullName:s,email:t,phone:i,nationality:a,destination:n,studyLevel:l,services:d}=r;if(!s||!t||!i||!a||!n||!l||!d)return o.NextResponse.json({message:"Missing required fields."},{status:400});let c=new u.Z(r);return await c.save(),o.NextResponse.json({message:"Inquiry submitted successfully."},{status:201})}catch(e){if(console.error("Error saving service inquiry:",e),e instanceof Error&&"ValidationError"===e.name)return o.NextResponse.json({message:"Invalid data provided.",details:e.message},{status:400});return o.NextResponse.json({message:"An unexpected error occurred."},{status:500})}}let c=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/inquiries/route",pathname:"/api/inquiries",filename:"route",bundlePath:"app/api/inquiries/route"},resolvedPagePath:"/home/efe/Documents/NextJs/NextJs-Public/AuthenticationSystem/apps/web/app/api/inquiries/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:g}=c,y="/api/inquiries/route";function w(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},85:(e,r,s)=>{s.d(r,{Jp:()=>q,n5:()=>d,uD:()=>a,no:()=>c,yN:()=>p,GJ:()=>m,Cz:()=>w,gV:()=>f});var t=s(11185),i=s.n(t);let a=async e=>{if(i().connections[0].readyState)return!0;try{return await i().connect(e),console.log("MongoDB connected successfully."),!0}catch(e){return console.error("Error connecting to MongoDB:",e),!1}};var n=s(4612),o=s(61343),l=s.n(o);let u=new t.Schema({name:{type:String,required:[!0,"Please provide your name"],trim:!0},email:{type:String,required:[!0,"Please provide your email"],unique:!0,trim:!0,lowercase:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Please provide a password"],minlength:6,select:!1},group:{type:String,enum:["user","admin"],default:"user"},isVerified:{type:Boolean,default:!1},verificationToken:{type:String,select:!1},verificationTokenExpires:{type:Date,select:!1},passwordResetToken:{type:String,select:!1},passwordResetTokenExpires:{type:Date,select:!1}},{timestamps:!0});u.pre("save",async function(e){if(!this.isModified("password")||!this.password)return e();let r=await l().genSalt(10);this.password=await l().hash(this.password,r),e()}),u.methods.comparePassword=async function(e){return!!this.password&&await l().compare(e,this.password)};let d=i().models.User||i().model("User",u),c=(e,r)=>({providers:[(0,n.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(r){if(await a(e),!r?.email||!r?.password)return null;let s=await d.findOne({email:r.email}).select("+password");return s&&await s.comparePassword(r.password)?{id:s._id.toString(),name:s.name,email:s.email,group:s.group}:null}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.group=r.group),e),session:async({session:e,token:r})=>(e.user&&(e.user.id=r.id,e.user.group=r.group),e)},pages:{signIn:"/login"},secret:r}),p=e=>!!e&&["admin","staff"].includes(e.toLowerCase()),m=e=>e?.user?.group==="admin",g=new(s(88444)).R(process.env.RESEND_API_KEY),y=process.env.EMAIL_FROM,w=async e=>{if(!process.env.RESEND_API_KEY||!y){let e="Email service is not configured. Please set RESEND_API_KEY and EMAIL_FROM environment variables.";return console.error(e),{success:!1,error:Error(e)}}try{let r=e.from||y,{data:s,error:t}=await g.emails.send({from:r,to:e.to,subject:e.subject,html:e.html});if(t)return console.error("Error sending email:",t),{success:!1,error:t};if(!s){let e=Error("Email sending failed without an explicit error.");return console.error(e),{success:!1,error:e}}return console.log("Email sent successfully:",s.id),{success:!0,data:s}}catch(e){return console.error("An unexpected error occurred in sendEmail:",e),{success:!1,error:e}}},v=new t.Schema({email:{type:String,required:!0},token:{type:String,required:!0,unique:!0},expiresAt:{type:Date,required:!0,expires:"1h"}}),q=i().models.PasswordResetToken||i().model("PasswordResetToken",v);var h=s(2608);h.z.object({name:h.z.string().min(3,{message:"Name must be at least 3 characters long"}),email:h.z.string().email({message:"Invalid email address"}),password:h.z.string().min(6,{message:"Password must be at least 6 characters long"})}),h.z.object({email:h.z.string().email({message:"Invalid email address"}),password:h.z.string().min(1,{message:"Password is required"})});let f=h.z.object({name:h.z.string().min(3).optional(),email:h.z.string().email().optional()});h.z.object({password:h.z.string().min(6,{message:"Password must be at least 6 characters long"})})},4514:(e,r,s)=>{s.d(r,{Z:()=>n});var t=s(11185),i=s.n(t);let a=new t.Schema({fullName:{type:String,required:[!0,"Full name is required."],trim:!0},email:{type:String,required:[!0,"Email is required."],trim:!0,lowercase:!0,match:[/.+\@.+\..+/,"Please fill a valid email address"]},phone:{type:String,required:[!0,"Phone number is required."],trim:!0},nationality:{type:String,required:[!0,"Nationality is required."],trim:!0},destination:{type:String,required:[!0,"Preferred study destination is required."],trim:!0},studyLevel:{type:String,required:[!0,"Level of study is required."],trim:!0},services:{type:[String],required:[!0,"Please select at least one service."],validate:{validator:e=>Array.isArray(e)&&e.length>0,message:"Please select at least one service."}},message:{type:String,trim:!0},createdAt:{type:Date,default:Date.now}}),n=i().models.ServiceInquiry||i().model("ServiceInquiry",a)}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[8565,4355,7668],()=>s(75901));module.exports=t})();